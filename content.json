{"pages":[{"title":"","text":"A simple, delicate, and modern theme for the static site generator Hexo. Preview | Documentation | Discuss on GitHub :cd: Installation12$ npm install hexo-theme-icarus$ hexo config theme icarus Please refer to Getting Started with Icarusfor more details. :gift: FeaturesCyberpunk Theme VariantTap into the future cyber world with the newly added Cyberpunk theme variant.Inspired by Cyberpunk 2077. Extensive Plugin SupportIcarus includes plentiful search, comment, sharing and other plugins out of the box that makes yourblog feature-rich and powerful. Comment Changyan &middot; Disqus &middot; DisqusJS &middot; Facebook &middot; Gitalk &middot; Gitment &middot;Isso &middot; LiveRe &middot; Utterance &middot; Valine Donate Button Afdian.net &middot; Alipay &middot; Buy me a coffee &middot; Patreon &middot; Paypal &middot; Wecat Search Algolia &middot; Baidu &middot; Google CSE &middot; Insight Share AddThis &middot; AddToAny &middot; Baidu Share &middot; Share.js &middot; ShareThis Widgets Google Adsense &middot; Archives &middot; Categories &middot; External Site Links &middot;Recent Posts &middot; Google Feedburner &middot; Tags &middot; Table of Contents Analytics Baidu Statistics &middot; Bing Webmaster &middot; BuSuanZi Web Counter &middot; CNZZ Statistics &middot;Google Analytics &middot; Hotjar &middot; StatCounter &middot; Twitter Conversion Tracking Other Plugins Cookie Consent &middot; LightGallery &middot; Justified Gallery &middot; KaTeX &middot; MathJax &middot;Oudated Browser &middot; Page Loading Animations Colorful Code HighlightIcarus directly import stylesheets from the highlight.js package and makes more than90 code highlight themes available to you. Atom One Light Monokai Kimbie Dark Flexible Theme ConfigurationIcarus allows you to configure your site on a per-page or per-layout basis. _config.icarus.yml12345widgets: - type: profile position: left - type: recent_posts position: right post.md12345widgets: - type: profile position: left - type: recent_posts position: left _config.page.yml1widgets: null Responsive LayoutGive your audiences best viewing experience with Icarus’s mobile-friendly responsive layout. :hammer: DevelopmentThis project is built with Hexo Inferno.js Stylus Bulma Please refer to the documentation andcontributing guide for implementation details. :tada: ContributeIf you feel like to help us build a better Icarus, you can :black_nib: Submit a tutorial |:earth_asia: Add a translation |:triangular_flag_on_post: Report a bug |:electric_plug: Suggest a new feature :memo: LicenseThis project is licensed under the MIT License - see the LICENSE file for details.","link":"/about/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/uncategorized/hello-world/"},{"title":"vue watch与computed","text":"watch和computed都是监听属性变化的，在某些场景下功能是一致的，如 需要监听一个数据的改变引起其他数据的变化 但是watch 和 computed侧重点不同 computedcomputed 计算属性，可以类比成data里的属性，他设计的初衷就是处理复杂逻辑数据的展示 1234&lt;div id=&quot;example&quot;&gt; &lt;p&gt;Original message: &quot;{{ message }}&quot;&lt;/p&gt; &lt;p&gt;Computed reversed message: &quot;{{ reversedMessage }}&quot;&lt;/p&gt;&lt;/div&gt; 1234567computed: { // 计算属性的 getter reversedMessage: function () { // `this` 指向 vm 实例 return this.message.split('').reverse().join('') } } 这里和 methods 做个对比 methods同样可以实现相同的效果， 1234&lt;div id=&quot;example&quot;&gt; &lt;p&gt;Original message: &quot;{{ message }}&quot;&lt;/p&gt; &lt;p&gt;Computed reversed message: &quot;{{ reversedMessage() }}&quot;&lt;/p&gt;&lt;/div&gt; 1234567methods: { // 计算属性的 getter reversedMessage: function () { // `this` 指向 vm 实例 return this.message.split('').reverse().join('') } } 但是这不是说我们可以混用methods和computed，methods就是单纯的方法，需要的时候调用 computed就厉害了，一个当然是他可以监听数据改变 官方解释:你可以像绑定普通 property 一样在模板中绑定计算属性。Vue 知道 vm.reversedMessage 依赖于 vm.message，因此当 vm.message 发生改变时，所有依赖 vm.reversedMessage 的绑定也会更新 另一个是，computed是基于它们的响应式依赖进行缓存的，只在相关响应式依赖发生改变时它们才会重新求值。这就意味着只要 message 还没有发生改变，多次访问 reversedMessage 计算属性会立即返回之前的计算结果，而不必再次执行函数。 computed 相比 更适用于大量数据计算 并需要缓存数据的场景 watchwatch 也是监听属性变化，不同的是watch监听已经挂载到vm上的数据，所以 除了监听data的变化，还可以用watch监听computed里计算属性的变化，以及props的变化 官方解释:当需要在数据变化时执行异步或开销较大的操作时，这个方式是最有用的。 总结一下区别1 computed是计算一个新的属性，并将该属性挂载到vm（Vue实例）上，而watch是监听已经存在且已挂载到vm上的数据，所以用watch同样可以监听computed计算属性的变化（其它还有data、props） 2 computed本质是一个惰性求值的观察者，具有缓存性，只有当依赖变化后，第一次访问 computed 属性，才会计算新的值，而watch则是当数据发生变化便会调用执行函数 3 从使用场景上说，computed适用多个数据影响一个数据被，而watch适用一个数据影响多个数据；","link":"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/vue-watch%E4%B8%8Ecomputed/"}],"tags":[{"name":"vue","slug":"vue","link":"/tags/vue/"}],"categories":[{"name":"前端开发","slug":"前端开发","link":"/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"}]}